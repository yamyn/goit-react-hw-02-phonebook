{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/App/App.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","components/Notification/Notification.js","components/ContactsList/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/CreateContactForm/CreateContactForm.js","components/App/App.js","index.js","components/CreateContactForm/CreateContactForm.module.css"],"names":["module","exports","Section","title","children","className","titleSection","Notification","message","ContactsListItem","i","name","number","onDeleteContact","type","onClick","ContactsList","contacts","table","row","headrow","map","id","key","style","backgroundColor","TaskFilter","value","onChangeFilter","filter","onChange","placeholder","TaskEditor","state","handleChange","event","setState","target","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","form","button","Component","App","changeFilter","e","addContact","contact","find","savedContact","toLowerCase","alert","contactToAdd","shortid","generate","deleteContact","filteredContacts","includes","filterContacts","styles","container","length","Filter","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8279c386.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ContactsList_table__1Z94X\",\"row\":\"ContactsList_row__B88cg\",\"headrow\":\"ContactsList_headrow__2FSb3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleSection\":\"Section_titleSection__3sOBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { titleSection } from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n    <section className={titleSection}>\n        <h2>{title}</h2>\n        {children}\n    </section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}!</p>;\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ContactsListItem({ i, name, number, onDeleteContact }) {\n    return (\n        <>\n            <td>{i}</td>\n            <td>{name}</td>\n            <td>{number}</td>\n            <td>\n                <button type=\"button\" onClick={onDeleteContact}>\n                    Delete\n                </button>\n            </td>\n        </>\n    );\n}\n\nContactsListItem.propTypes = {\n    i: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { table, row, headrow } from './ContactsList.module.css';\nimport ContactsListItem from './ContactsListItem';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => (\n    <table className={table}>\n        <thead>\n            <tr className={`${row} ${headrow}`}>\n                <th>#</th>\n                <th>Name</th>\n                <th>Number</th>\n                <th></th>\n            </tr>\n        </thead>\n\n        <tbody>\n            {contacts.map(({ id, name, number }, i) => (\n                <tr\n                    key={id}\n                    className={row}\n                    style={{\n                        backgroundColor: `${i % 2 === 1 ? '#fff' : '#ecf2f3'} `,\n                    }}\n                >\n                    <ContactsListItem\n                        i={i + 1}\n                        name={name}\n                        number={number}\n                        onDeleteContact={() => onDeleteContact(id)}\n                    />\n                </tr>\n            ))}\n        </tbody>\n    </table>\n);\n\nContactsList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { filter } from './Filter.module.css';\n\nconst TaskFilter = ({ value, onChangeFilter }) => (\n    <div className={filter}>\n        <p>Find contacts by name</p>\n        <input\n            type=\"text\"\n            value={value}\n            onChange={onChangeFilter}\n            placeholder=\"Enter name...\"\n        />\n    </div>\n);\n\nTaskFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default TaskFilter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { form, button } from './CreateContactForm.module.css';\n\nexport default class TaskEditor extends Component {\n    static propTypes = {\n        onAddContact: PropTypes.func.isRequired,\n    };\n\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        this.props.onAddContact({ ...this.state });\n\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        const { name, number } = this.state;\n\n        return (\n            <form onSubmit={this.handleSubmit} className={form}>\n                <div>\n                    <p>Name</p>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter contact`s name\"\n                        value={name}\n                        onChange={this.handleChange}\n                        name=\"name\"\n                    />\n                </div>\n                <div>\n                    <p>Number</p>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter contact`s name\"\n                        value={number}\n                        onChange={this.handleChange}\n                        name=\"number\"\n                    />\n                </div>\n                <button className={button} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport styles from './App.module.css';\n\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\nimport ContactsList from '../ContactsList/ContactsList';\nimport Filter from '../Filter/Filter';\nimport CreateContactForm from '../CreateContactForm/CreateContactForm';\n\nconst filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n};\n\nexport default class App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    changeFilter = e => {\n        this.setState({ filter: e.target.value });\n    };\n\n    addContact = contact => {\n        const isUniqueName = this.state.contacts.find(\n            savedContact =>\n                savedContact.name.toLowerCase() === contact.name.toLowerCase(),\n        );\n\n        if (isUniqueName)\n            return alert(`${contact.name} is already in contacts`);\n        const contactToAdd = {\n            ...contact,\n            id: shortid.generate(),\n        };\n        this.setState(state => ({\n            contacts: [...state.contacts, contactToAdd],\n        }));\n    };\n\n    deleteContact = id => {\n        this.setState(state => ({\n            contacts: state.contacts.filter(contact => contact.id !== id),\n        }));\n    };\n\n    render() {\n        const { contacts, filter } = this.state;\n        const filteredContacts = filterContacts(contacts, filter);\n\n        return (\n            <div className={styles.container}>\n                <h1>goit-react-hw-02-phonebook</h1>\n                <Section title=\"Phonebook\">\n                    <CreateContactForm onAddContact={this.addContact} />\n                </Section>\n                <Section title=\"Contacts\">\n                    {this.state.contacts.length > 2 && (\n                        <Filter\n                            value={filter}\n                            onChangeFilter={this.changeFilter}\n                        />\n                    )}\n                    {filteredContacts.length > 0 ? (\n                        <ContactsList\n                            contacts={filteredContacts}\n                            onDeleteContact={this.deleteContact}\n                        />\n                    ) : (\n                        <Notification message=\"Contacts for query not found\" />\n                    )}\n                </Section>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CreateContactForm_form__1IKsq\",\"button\":\"CreateContactForm_button__v34X3\"};"],"sourceRoot":""}